// https://github.com/Kotlin/kotlinx.coroutines/blob/d1be1c9d970e29fcc177bb3767087af48935d400/gradle/publish-bintray.gradle
// Configures publishing of Maven artifacts to Bintray

apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

def isAndroid = project.hasProperty("android")

task sourcesJar(type: Jar) {
  classifier = 'sources'
  if (isAndroid) {
    from android.sourceSets.main.java.srcDirs
  } else {
    from sourceSets.main.allSource
  }
}

artifacts {
  archives sourcesJar
}

if (isAndroid) {
  apply plugin: 'com.github.dcendents.android-maven'

  install {
    repositories.mavenInstaller {
      pom.project {
        packaging 'aar'
        groupId project.group
        artifactId project.name
        name project.name
      }
    }
  }

  bintrayUpload.dependsOn install
} else {
  publishing {
    repositories {
      maven { url 'https://dl.bintray.com/drewcarlson/kotlin-mobius' }
    }

    publications {
      maven(MavenPublication) {
        if (!isNative) {
          from components.java
          // artifact javadocJar
          artifact sourcesJar
        }
        groupId project.group
        artifactId project.name
        version project.version
      }
    }
  }
  if (isNative) {
    bintrayUpload.doFirst {
      publications = project.publishing.publications
    }
    bintrayUpload.dependsOn publishToMavenLocal
  }
}

bintray {
  user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
  key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')
  override = true // for multi-platform Kotlin/Native publishing
  if (isAndroid) {
    configurations = ['archives']
  } else {
    publications = ['maven']
  }
  pkg {
    repo = 'kotlin-mobius'
    name = project.name
    licenses = ['Apache-2.0']
    vcsUrl = 'https://github.com/DrewCarlson/kotlin-mobius.git'
    version {
      name = project.version
      vcsTag = project.version
      released = new Date()
    }
  }
}

// This is for easier debugging of bintray uploading problems
bintrayUpload.doFirst {
  publications = project.publishing.publications.findAll { !it.name.contains('-test') }.collect {
    println("Uploading artifact '$it.groupId:$it.artifactId:$it.version' from publication '$it.name'")
    it
  }
}
