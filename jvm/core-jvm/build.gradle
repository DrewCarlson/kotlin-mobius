apply plugin: 'kotlin-platform-jvm'
apply plugin: 'org.jetbrains.dokka'
apply plugin: 'me.champeau.gradle.japicmp'
apply from: rootProject.file('gradle/publish-bintray.gradle')

dependencies {
  expectedBy project(":common:core-common")
  implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

  testImplementation "junit:junit:4.12"
  testImplementation "org.jetbrains.kotlin:kotlin-test"
  testImplementation "org.jetbrains.kotlin:kotlin-test-junit"

  testImplementation "com.google.guava:guava:$guava_version"
  testImplementation "org.awaitility:awaitility:$awaitality_version"
}

compileKotlin {
  kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
  kotlinOptions.jvmTarget = "1.8"
}
sourceCompatibility = "1.8"

task japicmp(type: me.champeau.gradle.japicmp.JapicmpTask) {
  oldClasspath = files("${project.projectDir}/../compatjars/mobius-core-1.2.0.jar")
  newClasspath = files(jar.archivePath)
  // failOnModification = true
  onlyBinaryIncompatibleModified = true
  includeSynthetic = true
  txtOutputFile = file("$buildDir/reports/japi.txt")
  htmlOutputFile = file("$buildDir/reports/japi.html")
  japicmp.dependsOn(assemble)
}

check.dependsOn japicmp

dokka {
  outputFormat = 'html'
  outputDirectory = "$buildDir/javadoc"
}

test {
  testLogging {
    events "passed", "skipped", "failed"
    outputs.upToDateWhen { false }
  }
}
