apply plugin: 'kotlin-multiplatform'
apply plugin: 'maven-publish'

kotlin {
  targets {
    fromPreset(presets.iosX64, 'iosX64')
    fromPreset(presets.iosArm32, 'iosArm32')
    fromPreset(presets.iosArm64, 'iosArm64')
    fromPreset(presets.macosX64, 'macosX64')
    fromPreset(presets.linuxX64, 'linuxX64')
    fromPreset(presets.mingwX64, 'mingwX64')
    fromPreset(presets.wasm32, 'wasm32')
    fromPreset(presets.linuxArm32Hfp, 'linuxArm32Hfp')
    fromPreset(presets.linuxMips32, 'linuxMips32')
    fromPreset(presets.linuxMipsel32, 'linuxMipsel32')
    fromPreset(presets.androidNativeArm32, 'androidNativeArm32')
    fromPreset(presets.androidNativeArm64, 'androidNativeArm64')
    fromPreset(presets.jvm, 'jvm')
    fromPreset(presets.js, 'js') {
      compilations.main {
        compileKotlinJs.kotlinOptions {
          sourceMap = true
          metaInfo = true
          moduleKind = "umd"
          outputFile = "$buildDir/classes/kotlin/js/test/mobius-extras.js"
        }
        compileTestKotlinJs.kotlinOptions {
          moduleKind = "commonjs"
        }
      }
    }
  }
  sourceSets {
    all {
      dependencies {
        implementation project(':mobius-core')
      }
    }
  }
}

dependencies {
  commonMainImplementation "org.jetbrains.kotlin:kotlin-stdlib-common"
  commonTestImplementation "org.jetbrains.kotlin:kotlin-test-annotations-common"
  commonTestImplementation "org.jetbrains.kotlin:kotlin-test-common"

  jsMainImplementation "org.jetbrains.kotlin:kotlin-stdlib-js"
  jsTestImplementation "org.jetbrains.kotlin:kotlin-test-js"

  jvmMainImplementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
  jvmTestImplementation "org.jetbrains.kotlin:kotlin-test"
  jvmTestImplementation "org.jetbrains.kotlin:kotlin-test-junit"
}

publishing {
  repositories {
    maven {
      credentials {
        username System.getenv('BINTRAY_USER')
        password System.getenv('BINTRAY_API_KEY')
      }
      url "$maven_url/mobius-extras"
    }
  }
}

task publishIosExtras {
  dependsOn(
      'publishIosX64PublicationToMavenRepository',
      'publishIosArm64PublicationToMavenRepository',
      'publishIosArm32PublicationToMavenRepository'
  )
}
